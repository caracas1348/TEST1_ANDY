[
  {
    "Id": "1077433",
    "ThreadId": "452606",
    "Html": "Hi,\r<br />\n<br />\nI'm really excited to use the new JS APIs, and I've had good luck creating and editing documents without images.  However, if I try and simply re-save a document with images, it is way bigger on disk and fails to open in OSX Pages with an &quot;unknown error&quot; error.  (I'm running this in Node on v0.8.14 on Mountain Lion.)  When trying to open the created file in OSX Word, it displays a 98-page long document consisting of Base64.  (Which is possibly the incorrectly-encoded image?)\r<br />\n<br />\nThis is my first experience with OpenXML so maybe I'm missing something obvious.  The trick of renaming the file to &quot;.zip&quot; then opening it also fails with the created doc, throwing a &quot;Error 2 - No such file or directory&quot; error.\r<br />\n<br />\nThanks!\r<br />\n<br />\nBelow is the CoffeeScript I'm using, you can see that it's really simple.<br />\n<pre><code>fs = require 'fs'\nvm = require 'vm'\n_ = require 'underscore'\nargv = (require 'optimist').argv\nutil = require 'util'\n\ninclude = (path) -&gt;\n  code = fs.readFileSync path, 'utf8'\n  vm.runInThisContext code, path\n\ninclude(&quot;linq.js&quot;);\ninclude(&quot;ltxml.js&quot;);\ninclude(&quot;ltxml-extensions.js&quot;);\ninclude(&quot;jszip.js&quot;);\ninclude(&quot;jszip-load.js&quot;);\ninclude(&quot;jszip-inflate.js&quot;);\ninclude(&quot;jszip-deflate.js&quot;);\ninclude(&quot;openxml.js&quot;);\n\nDOMParser = require('xmldom').DOMParser;\nLtxml.DOMParser = DOMParser;\n\nXAttribute = Ltxml.XAttribute;\nXCData = Ltxml.XCData;\nXComment = Ltxml.XComment;\nXContainer = Ltxml.XContainer;\nXDeclaration = Ltxml.XDeclaration;\nXDocument = Ltxml.XDocument;\nXElement = Ltxml.XElement;\nXName = Ltxml.XName;\nXNamespace = Ltxml.XNamespace;\nXNode = Ltxml.XNode;\nXObject = Ltxml.XObject;\nXProcessingInstruction = Ltxml.XProcessingInstruction;\nXText = Ltxml.XText;\nXEntity = Ltxml.XEntity;\ncast = Ltxml.cast;\ncastInt = Ltxml.castInt;\n\nW = openXml.W;\nNN = openXml.NoNamespace;\nwNs = openXml.wNs;\n\nbuffer = fs.readFileSync argv.file\nb64 = buffer.toString 'base64'\n\ndoc = new openXml.OpenXmlPackage b64\n\ncontent = doc.saveToBase64()\noutBuffer = new Buffer content, 'base64'\nfs.writeFileSync argv.out, outBuffer</code></pre>\n\n",
    "PostedDate": "2013-08-06T14:02:10.857-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]